# name: Release

# on:
#   push:
#     tags:
#       - 'v*'

# jobs:
#   publish:
#     runs-on: ubuntu-22.04
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - run: echo "fake publish python package"

#   deploy-docs:
#     runs-on: ubuntu-22.04
#     needs: publish
#     permissions:
#       contents: write
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0  # mike requires full access to history and commits

#       - name: Install uv
#         uses: astral-sh/setup-uv@v5
      
#       # - name: Set up Python
#       #   run: uv python install

#       - name: Install dependencies
#         # run: uv pip install --system mkdocs-material==9.6.11 mike==2.1.3
#         # run: uv pip install mkdocs-material==9.6.11 mike==2.1.3
#         run: |
#           uv venv .venv
#           source .venv/bin/activate
#           uv pip install mkdocs-material==9.6.11 mike==2.1.3

#       - name: Configure Git
#         run: |
#           git config --global user.name "github-actions"
#           git config --global user.email "actions@github.com"

#       - name: Deploy versioned docs
#         run: |
#           source .venv/bin/activate
#           VERSION=${GITHUB_REF#refs/tags/}
#           # mike deploy "$VERSION" --update-aliases latest stable
#           mike deploy --push --update-aliases "$VERSION" latest
#           mike set-default "$VERSION"



name: ci 
on:
  push:
    branches:
      - master 
      - main
permissions:
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV 
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache 
          restore-keys: |
            mkdocs-material-
      - run: pip install mkdocs-material 
      - run: mkdocs gh-deploy --force